{
  "openapi": "3.1.0",
  "info": {
    "title": "DPS Submission Service API",
    "description": "API for Digital Preservation Submission Service. This API requires OAuth2 client credentials for authentication.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.dev.example.com",
      "description": "Development environment"
    }
  ],
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/v1/contracts/{contractId}/submissions": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Create a new submission",
        "operationId": "createSubmission",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubmissionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Submission created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - A Submission with the same ID already exists for this contractId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/submissions/{submissionId}/finalize": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Finalize submission",
        "description": "Once all files have been uploaded, call this endpoint to finalize the submission.",
        "operationId": "finalizeSubmission",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submission finalized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Submission cannot be finalized due to no files registered, missing files in S3 or other required conditions not being met.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/submissions/{submissionId}/files": {
      "post": {
        "tags": [
          "Submissions"
        ],
        "summary": "Register file and receive upload URL",
        "operationId": "registerFile",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterFileRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "File registered and upload URL generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - A file with the same filePath already exists for this submissionId.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/contracts/{contractId}/submissions/{submissionId}": {
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "Retrieve submission status",
        "operationId": "getSubmissionStatus",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Submission found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Submission not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmissionResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Submissions"
        ],
        "summary": "Delete a submission",
        "operationId": "deleteSubmission",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Submission deleted"
          },
          "401": {
            "description": "Unauthorized - Authentication is required"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action"
          },
          "404": {
            "description": "Submission not found"
          }
        }
      }
    },
    "/v1/contracts/{contractId}/submissions/{submissionId}/files/{fileId}": {
      "get": {
        "tags": [
          "Submissions"
        ],
        "summary": "Retrieve a specific file by its ID",
        "operationId": "getFile",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "Unique identifier for the file in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2XQ3lsRHSDAZbOD2MZoynf",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication is required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          },
          "404": {
            "description": "No files found for the submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Submissions"
        ],
        "summary": "Delete a file",
        "operationId": "deleteFile",
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "description": "ID of the contract, in Base16 format - 4 characters)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "4eaf",
              "pattern": "^[0-9a-f]{4}$"
            }
          },
          {
            "name": "submissionId",
            "in": "path",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "7mVKGHwOA6w2Ot8feF9fIU",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          },
          {
            "name": "fileId",
            "in": "path",
            "description": "Unique identifier for the file in Base62 format - 22 characters. The ID is case-sensitive.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2XQ3lsRHSDAZbOD2MZoynf",
              "pattern": "^[0-9a-zA-Z]{22}$"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "File deleted"
          },
          "401": {
            "description": "Unauthorized - Authentication is required"
          },
          "403": {
            "description": "Forbidden - User does not have the required role to perform this action"
          },
          "404": {
            "description": "File not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AlternativeTitle": {
        "type": "object",
        "description": "Represents a alternative title for a digital resource.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of title",
            "example": "Original tittle",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "The alternative title",
            "example": "My Alternative Book Title",
            "minLength": 1
          },
          "lang": {
            "type": "string",
            "description": "Language code (ISO 639-2).",
            "example": "eng",
            "minLength": 1,
            "pattern": "^[a-z]{3}$"
          }
        },
        "required": [
          "lang",
          "type",
          "value"
        ]
      },
      "Authority": {
        "type": "object",
        "description": "Represents a reference to an authority with source, code, and URI.",
        "properties": {
          "source": {
            "type": "string",
            "description": "Source for authority data.",
            "example": "Example authority",
            "minLength": 1
          },
          "code": {
            "type": "string",
            "description": "Authority code.",
            "example": 198097,
            "minLength": 1
          },
          "uri": {
            "type": "string",
            "description": "URI for the authority resource.",
            "example": "https://example.com/198097",
            "minLength": 1
          }
        }
      },
      "Contributor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contributor name",
            "example": "Nordmann, Ola",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Contributor type",
            "enum": [
              "Person",
              "Organization",
              "Personal Name",
              "Corporate Name",
              "Meeting Name",
              "Uniform Title"
            ],
            "example": "Person"
          },
          "role": {
            "type": "string",
            "description": "Contributor role",
            "example": "Avbildet"
          },
          "authority": {
            "$ref": "#/components/schemas/Authority",
            "description": "Authority"
          }
        }
      },
      "CreateSubmissionRequest": {
        "type": "object",
        "description": "Metadata for the submission to be created",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "Object identificator for the submission. The value must be unique within the contract.",
            "example": "av_6e8bc430-9c3a11d9",
            "pattern": "^[0-9a-zA-Z\\-_]{3,200}$"
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "default": "50",
            "description": "Priority of the submission (1-100). Lower number means higher priority.",
            "example": 50,
            "maximum": 100,
            "minimum": 1
          },
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "description": "Metadata for the submission."
          }
        },
        "required": [
          "metadata",
          "objectId"
        ]
      },
      "Creator": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Creator name",
            "example": "Marek, Václav",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Creator type",
            "enum": [
              "Person",
              "Organization",
              "Personal Name",
              "Corporate Name",
              "Meeting Name",
              "Uniform Title"
            ],
            "example": "Person"
          },
          "role": {
            "type": "string",
            "description": "Creator role",
            "example": "Fotograf"
          },
          "authority": {
            "$ref": "#/components/schemas/Authority",
            "description": "Authority"
          }
        }
      },
      "Description": {
        "type": "object",
        "properties": {
          "lang": {
            "type": "string",
            "description": "Språkkode (ISO 639-2).",
            "example": "nob",
            "minLength": 1,
            "pattern": "^[a-z]{3}$"
          },
          "value": {
            "type": "string",
            "description": "Emneord knyttet til ressursen",
            "example": "Norge",
            "minLength": 1
          }
        },
        "required": [
          "lang",
          "value"
        ]
      },
      "Identifier": {
        "type": "object",
        "description": "Represents an identifier for a resource.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of identifier",
            "example": "URN",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "The value of the identifier",
            "example": "URN:NBN:no-nb_plfut_00001",
            "minLength": 1
          }
        }
      },
      "Language": {
        "type": "object",
        "description": "Language relevant to the resource.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Language type",
            "example": "Subtitles",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "The language",
            "example": "Swedish",
            "minLength": 1
          },
          "lang": {
            "type": "string",
            "description": "Language code (ISO 639-2).",
            "example": "eng",
            "minLength": 1,
            "pattern": "^[a-z]{3}$"
          }
        },
        "required": [
          "lang",
          "type",
          "value"
        ]
      },
      "Metadata": {
        "type": "object",
        "description": "Represents metadata for a digital resource based on Dublin Core Elements.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the resource.",
            "enum": [
              "Still Image",
              "Text",
              "Sound",
              "Moving Image",
              "Collection"
            ]
          },
          "identifiers": {
            "type": "array",
            "description": "List of identifiers for the resource.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            },
            "minItems": 1
          },
          "title": {
            "$ref": "#/components/schemas/Title",
            "description": "Title of the resource."
          },
          "alternatives": {
            "type": "array",
            "description": "Alternative titles for the resource.",
            "items": {
              "$ref": "#/components/schemas/AlternativeTitle"
            }
          },
          "creators": {
            "type": "array",
            "description": "Creators of the resource.",
            "items": {
              "$ref": "#/components/schemas/Creator"
            }
          },
          "contributors": {
            "type": "array",
            "description": "Contributors to the resource.",
            "items": {
              "$ref": "#/components/schemas/Contributor"
            }
          },
          "publishers": {
            "type": "array",
            "description": "Publishers of the resource.",
            "items": {
              "$ref": "#/components/schemas/Publisher"
            }
          },
          "spatial": {
            "type": "array",
            "description": "Spatial characteristics of the resource.",
            "items": {
              "$ref": "#/components/schemas/Spatial"
            }
          },
          "dates": {
            "type": "array",
            "description": "Relevant dates for the resource.",
            "items": {
              "$ref": "#/components/schemas/MetadataDate"
            }
          },
          "languages": {
            "type": "array",
            "description": "Language used in the resource.",
            "items": {
              "$ref": "#/components/schemas/Language"
            }
          },
          "isPartOf": {
            "type": "array",
            "description": "Describes a relationship where the current resource is part of another resource.",
            "items": {
              "$ref": "#/components/schemas/PartOf"
            }
          },
          "provenance": {
            "type": "array",
            "description": "Information about the history of the resource.",
            "items": {
              "$ref": "#/components/schemas/Provenance"
            }
          },
          "subjects": {
            "type": "array",
            "description": "Subject keywords for the resource.",
            "items": {
              "$ref": "#/components/schemas/Subject"
            }
          },
          "descriptions": {
            "type": "array",
            "description": "Descriptions of the resource.",
            "items": {
              "$ref": "#/components/schemas/Description"
            }
          }
        },
        "required": [
          "title",
          "type"
        ]
      },
      "MetadataDate": {
        "type": "object",
        "description": "Represents a date associated with an event in the lifecycle of the resource. The date value must conform to the ISO 8601 standard.",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of the date (e.g., 'created', 'modified', 'published').",
            "example": "created",
            "minLength": 1
          },
          "value": {
            "type": "string",
            "description": "The date value, conforming to ISO 8601 (e.g., '2023-10-27', '2023-10', '2023-10-27T10:30:00Z').",
            "example": "2023-10-27",
            "minLength": 1
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "PartOf": {
        "type": "object",
        "description": "A related resource in which the described resource is included.",
        "properties": {
          "value": {
            "type": "string",
            "example": "Chronicles of Narnia",
            "minLength": 1
          },
          "lang": {
            "type": "string",
            "description": "Language code (ISO 639-2).",
            "example": "eng",
            "pattern": "^[a-z]{3}$"
          }
        }
      },
      "Provenance": {
        "type": "object",
        "description": "Information about any changes that have an impact on the resource's authenticity, integrity and interpretation ",
        "properties": {
          "value": {
            "type": "string",
            "example": "The collection was donated to the National Library by Václav Marek 1979-05-12",
            "minLength": 1
          },
          "lang": {
            "type": "string",
            "description": "Language code (ISO 639-2).",
            "example": "eng",
            "pattern": "^[a-z]{3}$"
          }
        }
      },
      "Publisher": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Publisher name",
            "example": "Gyldendal",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Publisher type",
            "enum": [
              "Person",
              "Organization",
              "Personal Name",
              "Corporate Name",
              "Meeting Name",
              "Uniform Title"
            ],
            "example": "Organization"
          },
          "authority": {
            "$ref": "#/components/schemas/Authority",
            "description": "Authority"
          }
        }
      },
      "Spatial": {
        "type": "object",
        "description": "Represents a spatial location, including its name, authority, coordinates, and type.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the spatial location.",
            "example": "Mo i Rana",
            "minLength": 1
          },
          "type": {
            "type": "string",
            "description": "Type of the spatial location.",
            "example": "Place"
          },
          "authority": {
            "$ref": "#/components/schemas/Authority",
            "description": "Authority providing information about the spatial location. This now uses the AuthorityReference structure."
          },
          "coordinateReferenceSystem": {
            "type": "string",
            "description": "The coordinate reference system used for latitude and longitude. Defaults to EPSG:4326 if not specified.",
            "example": "EPSG:4326"
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude of the spatial location.",
            "example": 67.2968,
            "maximum": 90,
            "minimum": -90
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude of the spatial location.",
            "example": 14.3974,
            "maximum": 180,
            "minimum": -180
          }
        }
      },
      "Subject": {
        "type": "object",
        "description": "Representerer et emneord.",
        "properties": {
          "lang": {
            "type": "string",
            "description": "Språkkode (ISO 639-2).",
            "example": "nob",
            "minLength": 1,
            "pattern": "^[a-z]{3}$"
          },
          "value": {
            "type": "string",
            "description": "Emneordet.",
            "example": "Norge",
            "minLength": 1
          }
        },
        "required": [
          "lang",
          "value"
        ]
      },
      "Title": {
        "type": "object",
        "description": "Represents a localized value with a language code and optional type.",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value.",
            "example": "My Book Title",
            "minLength": 1
          },
          "lang": {
            "type": "string",
            "description": "Language code (ISO 639-2).",
            "example": "eng",
            "pattern": "^[a-z]{3}$"
          }
        }
      },
      "FileResponse": {
        "type": "object",
        "properties": {
          "fileId": {
            "type": "string",
            "description": "Unique identifier for the file in Base62 format - 22 characters. The ID is case-sensitive.",
            "example": "1M0x4T9rN8Xc7B2Yq5L3zK",
            "pattern": "^[0-9a-zA-Z]{22}$"
          },
          "filePath": {
            "type": "string",
            "description": "Relative path of the file within the submission. The path must be unique within the submission.",
            "example": "path/to/file.txt"
          },
          "checksum": {
            "type": "string",
            "description": "Checksum for the file in MD5 format",
            "pattern": "^[0-9a-f]{32}$"
          },
          "isPackaged": {
            "type": "boolean",
            "description": "Indicates if the file is packaged",
            "example": false
          },
          "uploadUrl": {
            "type": "string",
            "description": "URL for direct upload to S3"
          }
        },
        "required": [
          "checksum",
          "fileId",
          "filePath",
          "isPackaged",
          "uploadUrl"
        ]
      },
      "SubmissionResponse": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "string",
            "readOnly": true
          },
          "submissionId": {
            "type": "string",
            "description": "Unique identifier for the submission in Base62 format - 22 characters. The ID is case-sensitive.",
            "example": "8Z7x1T9rN0Xc2B5Yq4L3zP",
            "pattern": "^[0-9a-zA-Z]{22}$"
          },
          "objectId": {
            "type": "string",
            "description": "Object identificator for the submission"
          },
          "status": {
            "type": "string",
            "description": "Status of the submission",
            "enum": [
              "REGISTERED",
              "UPLOAD_COMPLETED",
              "REJECTED",
              "VALIDATED",
              "TRANSFERRED_TO_ARCHIVE",
              "PRESERVED"
            ]
          },
          "priority": {
            "type": "integer",
            "format": "int32",
            "description": "Priority of the submission",
            "example": 50
          },
          "files": {
            "type": "array",
            "description": "List of files associated with the submission",
            "items": {
              "$ref": "#/components/schemas/FileResponse"
            }
          }
        },
        "required": [
          "objectId",
          "status",
          "submissionId"
        ]
      },
      "RegisterFileRequest": {
        "type": "object",
        "description": "Request body for registering a new file",
        "properties": {
          "filePath": {
            "type": "string",
            "description": "Relative path of the file within the submission. The path must be unique within the submission. Max lengt: 900 characters",
            "example": "path/to/file.txt",
            "maxLength": 900,
            "minLength": 0
          },
          "checksum": {
            "type": "string",
            "description": "Checksum for the file in MD5 format",
            "pattern": "^[0-9a-f]{32}$"
          },
          "isPackaged": {
            "type": "boolean",
            "default": "false",
            "description": "Optional flag to indicate if the file is packaged in ZIP or TAR format.",
            "example": true
          }
        },
        "required": [
          "checksum",
          "filePath"
        ]
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Client Credentials Flow",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://www.example.com/authn/realms/myrealm/protocol/openid-connect/token",
            "scopes": {}
          }
        }
      }
    }
  }
}